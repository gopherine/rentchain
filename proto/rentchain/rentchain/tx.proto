syntax = "proto3";

package rentchain.rentchain;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "rentchain/rentchain/params.proto";
import "rentchain/rentchain/rental_agreement.proto";

option go_package = "github.com/gopherine/rentchain/x/rentchain/types";


message EventAttribute {
  string key   = 1;
  string value = 2;
}

message Event {
  string type = 1;
  repeated EventAttribute attributes = 2 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "attributes,omitempty"];
}

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  
  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams          (MsgUpdateParams         ) returns (MsgUpdateParamsResponse         );
  rpc CreateRental          (MsgCreateRental         ) returns (MsgCreateRentalResponse         );
  rpc CompleteRental        (MsgCompleteRental       ) returns (MsgCompleteRentalResponse       );
  rpc CreateRentalAgreement (MsgCreateRentalAgreement) returns (MsgCreateRentalAgreementResponse);
  rpc UpdateRentalAgreement (MsgUpdateRentalAgreement) returns (MsgUpdateRentalAgreementResponse);
  rpc DeleteRentalAgreement (MsgDeleteRentalAgreement) returns (MsgDeleteRentalAgreementResponse);
}
// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) =                             "authority";
  option           (amino.name) = "rentchain/x/rentchain/MsgUpdateParams";
  
  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.
  
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

message MsgCreateRental {
  option (cosmos.msg.v1.signer) = "creator";
  string creator   = 1;
  string itemId    = 2;
  string ownerId   = 3;
  string renterId  = 4;
  string price     = 5;
  string startTime = 6;
  string duration  = 7;
}

message MsgCreateRentalResponse {}

message MsgCompleteRental {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  string ownerId   = 2;
  string itemId  = 3;
}

message MsgCompleteRentalResponse {}

message MsgCreateRentalAgreement {
  option (cosmos.msg.v1.signer) = "creator";
  string creator   = 1;
  string index     = 2;
  string itemId    = 3;
  string ownerId   = 4;
  string renterId  = 5;
  string price     = 6;
  string startTime = 7;
  string duration  = 8;
  bool   isActive  = 9;
}

message MsgCreateRentalAgreementResponse {}

message MsgUpdateRentalAgreement {
  option (cosmos.msg.v1.signer) = "creator";
  string creator   = 1;
  string index     = 2;
  string itemId    = 3;
  string ownerId   = 4;
  string renterId  = 5;
  string price     = 6;
  string startTime = 7;
  string duration  = 8;
  bool   isActive  = 9;
}

message MsgUpdateRentalAgreementResponse {}

message MsgDeleteRentalAgreement {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  string index   = 2;
}

message MsgDeleteRentalAgreementResponse {}

