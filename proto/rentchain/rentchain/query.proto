syntax = "proto3";

package rentchain.rentchain;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "rentchain/rentchain/params.proto";
import "rentchain/rentchain/rental_agreement.proto";

option go_package = "github.com/gopherine/rentchain/x/rentchain/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/gopherine/rentchain/rentchain/params";
  
  }
  
  // Queries a list of RentalAgreement items.
  rpc RentalAgreement    (QueryGetRentalAgreementRequest) returns (QueryGetRentalAgreementResponse) {
    option (google.api.http).get = "/gopherine/rentchain/rentchain/rental_agreement/{index}";
  
  }
  rpc RentalAgreementAll (QueryAllRentalAgreementRequest) returns (QueryAllRentalAgreementResponse) {
    option (google.api.http).get = "/gopherine/rentchain/rentchain/rental_agreement";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

message QueryGetRentalAgreementRequest {
  string index = 1;
}

message QueryGetRentalAgreementResponse {
  RentalAgreement rentalAgreement = 1 [(gogoproto.nullable) = false];
}

message QueryAllRentalAgreementRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllRentalAgreementResponse {
  repeated RentalAgreement                        rentalAgreement = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination      = 2;
}

